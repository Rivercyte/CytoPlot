#!/bin/env/python
"""Replace version file for semver-controlled package"""
import pathlib
import subprocess as sp
import sys


def write_version(version, path):
    if version.count(".") < 3:  # probably the file name.py
        version = sp.check_output(
            "git describe --tags", shell=True).decode("utf-8").strip()

    major, minor, fix, release = version.split(".")
    release=release.split("-", 1)[0]
    version = f"{major}.{minor}.{fix}.{release}"
    versions_content = f"""
# file generated by setuptools_scm
# don't change, don't track in version control
TYPE_CHECKING = False
if TYPE_CHECKING:
    from typing import Tuple, Union
    VERSION_TUPLE = Tuple[Union[int, str], ...]
else:
    VERSION_TUPLE = object

version: str
__version__: str
__version_tuple__: VERSION_TUPLE
version_tuple: VERSION_TUPLE

__version__ = version = '{version}'
__version_tuple__ = version_tuple = ({major}, {minor}, {fix}, '{release}')
"""
    path.write_text(versions_content)
    print(version)


if __name__ == "__main__":
    version = sys.argv[-2]
    versions_path = pathlib.Path(sys.argv[-1])
    write_version(version=version, path=versions_path)
